#this query will find all the concepts that do not have narrower(child) concepts when using a conceptScheme that only explicitly declares skos:broader relationsips. 

PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
 
#Display everything available from the query
SELECT *

WHERE {

#Define the Primary Subject: return all skos Concepts in the graph and their preferred labels
# ? defines the label returned by the query against the skos:Concept subject
# skos:preflabel the other thing(s) we want against the subject, and the '.' closes out this subject within the query.
?concepturi a skos:Concept ;
skos:prefLabel ?preflabel ;
skos:inScheme <https://linked.data.gov.au/def/geo-commodities> .

#Set Optional returns (to ignore sparql null rule), i.e. return blank instead of preventing result
OPTIONAL {?concepturi skos:definition ?definition}. #optional definitions
OPTIONAL {?concepturi skos:notation ?notation} . #optional notations

#Apply filters by removing the unwawnted broader terms
# from the above query remove (MINUS) all the results from the following query
#return all concepts as broaderuri and then list their broader concepts as concepturi (so they can be removed as equivalents to the full concepturi list)
    MINUS {SELECT ?broaderuri ?concepturi
           WHERE
           {?broaderuri a skos:Concept ;
            skos:broader ?concepturi .
}} 
#select all concepts in the graph as broaderuri that have broader concepts. But call all the broader concepts to those broaderuri subjects concepturi to make them equivalent to the main query subjects.
#in effect, get all the concepts in the target conceptScheme then remove all the concepts that are listed as a broader term by any other concept.
}

#Display in order of: the uri of the concept
ORDER BY ?concepturi
